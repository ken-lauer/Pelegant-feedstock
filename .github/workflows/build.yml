name: Build

on:
  push:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest-large
            architecture: x86_64
            artifactpath: osx-64
            target: osx_64_python3.10.____cpython
          - os: macos-latest-large
            architecture: x86_64
            artifactpath: osx-64
            target: osx_64_python3.11.____cpython
          - os: macos-latest-large
            architecture: x86_64
            artifactpath: osx-64
            target: osx_64_python3.12.____cpython

          # We can't use macos-latest-xlarge (M1/arm64) here, but because conda
          # build scripts cross-compile to arm64 we should still be OK.
          # Message: xcodebuild[19412:99289] [MT] DVTSDK: Skipped SDK
          #          /Applications/Xcode_15.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk;
          #          its version (11.0) is below required minimum (13.0) for the macosx
          #          platform.
          # - os: macos-latest-xlarge
          #   architecture: arm64
          - os: macos-latest-large
            architecture: x86_64
            artifactpath: osx-arm64
            target: osx_arm64_python3.10.____cpython
          - os: macos-latest-large
            architecture: x86_64
            artifactpath: osx-arm64
            target: osx_arm64_python3.11.____cpython
          - os: macos-latest-large
            architecture: x86_64
            artifactpath: osx-arm64
            target: osx_arm64_python3.12.____cpython

          - os: ubuntu-latest
            architecture: x86_64
            artifactpath: linux-64
            target: linux_64_python3.10.____cpython
          - os: ubuntu-latest
            architecture: x86_64
            artifactpath: linux-64
            target: linux_64_python3.11.____cpython
          - os: ubuntu-latest
            architecture: x86_64
            artifactpath: linux-64
            target: linux_64_python3.12.____cpython
          # - os: windows-latest
          #   architecture: osx-64

    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: pelegant
          architecture: ${{ matrix.architecture }}
          channels: conda-forge
          miniconda-version: latest
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: Install conda build requirements
        shell: bash -l {0}
        run: |
          mamba install -y conda-build 

      - name: Build ${{ matrix.target }}
        shell: bash -l {0}
        run: python build-locally.py ${{ matrix.target }}

      - name: Explore build-artifacts ${{ matrix.target }}
        shell: bash -l {0}
        run: find build_artifacts

      - uses: actions/upload-artifact@v4
        with:
          name: Pelegant-${{ matrix.os }}-${{ matrix.architecture }}-binaries
          path: build_artifacts/${{ matrix.artifactpath }}/*.conda
