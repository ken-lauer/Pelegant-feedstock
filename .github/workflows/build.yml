name: Build

on:
  push:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest-large
            architecture: x86_64
            artifactpath: osx-64
            target: osx_64_python3.10.____cpython
            xcode_version: 15.0.1
          - os: macos-latest-large
            architecture: x86_64
            artifactpath: osx-64
            target: osx_64_python3.11.____cpython
            xcode_version: 15.0.1
          - os: macos-latest-large
            architecture: x86_64
            artifactpath: osx-64
            target: osx_64_python3.12.____cpython
            xcode_version: 15.0.1

          - os: macos-latest-xlarge
            architecture: arm64
            artifactpath: osx-arm64
            target: osx_arm64_python3.10.____cpython
            xcode_version: 13.2.1
          - os: macos-latest-xlarge
            architecture: arm64
            artifactpath: osx-arm64
            target: osx_arm64_python3.11.____cpython
            xcode_version: 13.2.1
          - os: macos-latest-xlarge
            architecture: arm64
            artifactpath: osx-arm64
            target: osx_arm64_python3.12.____cpython
            xcode_version: 13.2.1

          - os: ubuntu-latest
            architecture: x86_64
            artifactpath: linux-64
            target: linux_64_python3.10.____cpython
            xcode_version:
          - os: ubuntu-latest
            architecture: x86_64
            artifactpath: linux-64
            target: linux_64_python3.11.____cpython
            xcode_version:
          - os: ubuntu-latest
            architecture: x86_64
            artifactpath: linux-64
            target: linux_64_python3.12.____cpython
            xcode_version:

    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      DEVELOPER_DIR: "/Applications/Xcode_${{ matrix.xcode_version }}.app/Contents/Developer"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for Xcode versions
        run: |
          ls -l /Applications || echo "This is Linux"

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: pelegant
          architecture: ${{ matrix.architecture }}
          channels: conda-forge
          miniconda-version: latest
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: Install conda build requirements
        shell: bash -l {0}
        run: |
          mamba install -y conda-build anaconda-client

      - name: Build ${{ matrix.target }}
        shell: bash -l {0}
        run: python build-locally.py ${{ matrix.target }}

      - name: Find build-artifacts
        shell: bash -l {0}
        run: find . -name "*.conda"

      - name: Upload build_artifacts
        shell: bash -l {0}
        run: |
          if [ -d "build_artifacts" ]; then
            find "build_artifacts/${{ matrix.artifactpath }}/" -name "*.conda" \
                -exec anaconda -t "$ANACONDA_TOKEN" upload "{}" \;
          fi

      - name: Upload conda-bld artifacts
        shell: bash -l {0}
        run: |
          if [ -d "miniforge3" ]; then
            find "miniforge3/conda-bld/${{ matrix.artifactpath }}/" -name "*.conda" \
                -exec anaconda -t "$ANACONDA_TOKEN" upload "{}" \;
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: Pelegant-${{ matrix.target }}-conda
          path: build_artifacts/${{ matrix.artifactpath }}/*.conda
          if-no-files-found: warn

      - uses: actions/upload-artifact@v4
        with:
          name: Pelegant-${{ matrix.target }}-conda
          path: miniforge3/conda-bld/${{ matrix.artifactpath }}/*.conda
          if-no-files-found: warn
